def ENV = "UNKNOWN"
def NAME = "cperf"
def BUILD_NUMBER = 0
def NEXUS_VERSION = "UNKNOWN"
def remote = [:]
    remote.name = 'local'
    remote.host = '192.168.0.1'
    remote.user = 'jenkins_ci'
    remote.password = 'bWFzdGVybWluZDAx'
    remote.allowAnyHosts = true
pipeline {
    agent any
    tools {
        maven 'Maven 3.5'
        jdk 'JDK 8'
    }
    triggers {
        pollSCM '* * * * *'
    }
    stages {
        stage('Setup Environment') {
            steps {
                script {
                    BUILD_NUMBER = env.BUILD_ID
                    if (env.BRANCH_NAME == 'master') {
                        ENV = "release"
                        NEXUS_VERSION = "RELEASE"
                    } else if (env.BRANCH_NAME == 'develop') {
                        ENV = "nightly"
                        NEXUS_VERSION = "SNAPSHOT"
                    } else {
                        currentBuild.result = 'ABORTED'
                        error("Stopping early, unknown branch '${env.BRANCH_NAME}'")
                    }
                }
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        stage('Docker Build') {
            steps {
                sh "/var/jenkins_home/docker/docker -H 192.168.0.1:2375 login -u ahmad -p mastermind01 registry.devops.svc.cluster.local:5000"
                sh "/var/jenkins_home/docker/docker -H 192.168.0.1:2375 build ./build -t registry.devops.svc.cluster.local:5000/${NAME}-${ENV}:${BUILD_NUMBER} -t registry.devops.svc.cluster.local:5000/${NAME}-${ENV}:latest"
                sh "/var/jenkins_home/docker/docker -H 192.168.0.1:2375 push registry.devops.svc.cluster.local:5000/${NAME}-${ENV}:${BUILD_NUMBER}"
                sh "/var/jenkins_home/docker/docker -H 192.168.0.1:2375 push registry.devops.svc.cluster.local:5000/${NAME}-${ENV}:latest"
                sh "/var/jenkins_home/docker/docker -H 192.168.0.1:2375 rmi registry.devops.svc.cluster.local:5000/${NAME}-${ENV}:${BUILD_NUMBER} registry.devops.svc.cluster.local:5000/${NAME}-${ENV}:latest"
            }
        }
        stage('Nexus Deployment') {
            steps {
                nexusArtifactUploader artifacts: [[artifactId: NAME, classifier: '', file: 'build/Application.jar', type: 'jar']], credentialsId: '456', groupId: 'sn.cperf', nexusUrl: 'nexus.devops.svc.cluster.local', nexusVersion: 'nexus3', protocol: 'http', repository: "maven-snsoftware-${ENV}", version: "${BUILD_NUMBER}-${NEXUS_VERSION}"
            }
        }
        stage('Kubernetes Deployment') {
            steps {
                sh 'mkdir -p ~/.kube/'
                sh 'cp -f /var/jenkins_home/kube/config ~/.kube/config'
                sh returnStatus: true, script: "/var/jenkins_home/kube/kubectl delete -f deployment/kubernetes/${ENV}.yml"
                sh "/var/jenkins_home/kube/kubectl create -f deployment/kubernetes/${ENV}.yml"
            }
        }
        stage('Reverse Proxy Setup') {
            steps {
                sh "rm -f /var/nginx/${NAME}-${ENV}.conf"
                sh returnStatus: true, script: "cp -f deployment/nginx/${NAME}-${ENV}.conf /var/nginx/${NAME}-${ENV}.conf"
                sshCommand remote: remote, command: "/bin/systemctl reload nginx.service", sudo: true
            }
        }
    }
}